plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.i.and.you'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    // 자바 JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // XML 문서와 JAVA 객체 간 매핑을 자동화
    implementation 'javax.xml.bind:jaxb-api:2.3.1'


    // QueryDSL 설정
   	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
   	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
   	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
   	annotationProcessor "jakarta.persistence:jakarta.persistence-api"



}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정
def generated = 'src/main/generated'

sourceSets {
	main.java.srcDir generated
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}
